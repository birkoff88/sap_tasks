# .github/workflows/terraform-task2.yml
name: terraform-task2

on:
  pull_request:
    branches:
      - main
    paths:
      - 'task2/gitea-aws/**'
      - '.github/workflows/terraform-task2.yml'
  push:
    branches:
      - main
    paths:
      - 'task2/gitea-aws/**'
      - '.github/workflows/terraform-task2.yml'
  workflow_dispatch:
    inputs:
      apply:
        description: 'Run terraform apply (Terraform Cloud backend)'
        type: boolean
        default: false
      tf_vars:
        description: 'Optional TF_VAR_* (space-separated: key=val key2=val2)'
        type: string
        required: false

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-central-1
  TF_WORKING_DIR: task2/gitea-aws
  TF_IN_AUTOMATION: "true"
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

  TF_VAR_project_name: sap-gitea
  TF_VAR_env: dev
  TF_VAR_aws_region: eu-central-1

jobs:
  plan:
    name: fmt / validate / plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform fmt (check)
        run: terraform fmt -check -diff

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan (remote)
        run: terraform plan -input=false -no-color

  apply:
    name: manual apply
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.apply == true }}
    runs-on: ubuntu-latest
    needs: plan
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init -input=false

      - name: Export TF_VAR_* (optional)
        if: ${{ inputs.tf_vars != '' }}
        run: |
          for kv in ${{ inputs.tf_vars }}; do
            k="${kv%%=*}"; v="${kv#*=}"
            echo "TF_VAR_${k}=${v}" >> $GITHUB_ENV
          done

      - name: Terraform apply (remote)
        run: terraform apply -input=false -auto-approve -no-color
